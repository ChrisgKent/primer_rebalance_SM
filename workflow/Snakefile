import pathlib

configfile: "config/config.yaml"

## Input validation 
# Validates the scheme input
if not pathlib.Path(config["scheme"]).is_file():
    raise Exception(f"output_dir does not point to a file")
# Validates the bedfile input
if not pathlib.Path(config["mapped_bed_dir"]).is_dir():
    raise Exception(f"mapped_bed_dir is not a directory")

# This input function finds all subseqs within each clade
## and returns them as a list 
BARCODES = glob_wildcards(pathlib.Path(config["mapped_bed_dir"])/"{barcode}.sorted.bam").barcode

def GETBARCODES(wildcards):
    return pathlib.Path(config["mapped_bed_dir"])/"{barcode}.sorted.bam"

OUTPUT_DIR = pathlib.Path(config["output_dir"])
SCHEME = pathlib.Path(config["scheme"])

rule all:
    input:
        OUTPUT_DIR/"rebalanced.tsv"

# Takes the primer.scheme.bed and parses it into amplicons
rule amplicon_parser:
    input: 
        SCHEME
    output:
        OUTPUT_DIR/"amplicons.bed"
    conda:
        "envs/r.yaml"
    message:
        "Parsing Primer Scheme to find amplicons"
    script:
        "scripts/amplicon_parser.R"

# Counts all reads that have over 50% coverage to each amplicon
rule coverage:
    input:
        bed = GETBARCODES,
        scheme = OUTPUT_DIR/"amplicons.bed"
    output:
        OUTPUT_DIR/"coverage/{barcode}.bed"
    message:
        "Determining Coverage of {wildcards.barcode} "
    shell:
        "bedtools coverage -a {input.scheme} -b {input.bed} -f 0.5 > {output}"

rule rebalance:
    input:
        bed_dirs = expand(OUTPUT_DIR/"coverage/{barcode}.bed", barcode=BARCODES),
        amp_dir = OUTPUT_DIR/"amplicons.bed"
    output:
        tsv = OUTPUT_DIR/"rebalanced.tsv",
        plot = OUTPUT_DIR/"proportion.png"
    conda:
        "envs/r.yaml"
    params:
        n = config["n"],
        normalised_n_cap = config["normalised_n_cap"],
        ul_of_each_primer = config["ul_of_each_primer"],
        ul_of_10uM_primer_stock_in_25ul = config["ul_of_10uM_primer_stock_in_25ul"]
    message:
        "Running rebalance"
    script:
        "scripts/primer_rebal.R"
